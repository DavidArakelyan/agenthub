version: '3.8'

services:
  orchestrator:
    build:
      context: ../../
      dockerfile: services/orchestrator/Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ../../.env
    environment:
      - ENVIRONMENT=development
    volumes:
      - ../../services/orchestrator:/app
    depends_on:
      - redis
      - rabbitmq

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  milvus:
    image: milvusdb/milvus:v2.3.1
    ports:
      - "19530:19530"
      - "9091:9091"
    volumes:
      - milvus_data:/var/lib/milvus
    environment:
      - ETCD_CFG.auto-compaction-mode=revision
      - ETCD_CFG.auto-compaction-retention=1000
      - COMMON_CFG.retention_duration=100

  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9090:9090"
    volumes:
      - ../../deploy/prometheus:/etc/prometheus
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana:10.0.3
    ports:
      - "3000:3000"
    volumes:
      - ../../deploy/grafana:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  websearch:
    build:
      context: ../../
      dockerfile: services/websearch/Dockerfile
    ports:
      - "8001:8000"
    env_file:
      - ../../.env
    environment:
      - ENVIRONMENT=development
    volumes:
      - ../../services/websearch:/app
    depends_on:
      - redis
      - rabbitmq

  frontend:
    build:
      context: ../../
      dockerfile: services/frontend/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ../../services/frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development

volumes:
  redis_data:
  rabbitmq_data:
  milvus_data:
  prometheus_data:
  grafana_data:
