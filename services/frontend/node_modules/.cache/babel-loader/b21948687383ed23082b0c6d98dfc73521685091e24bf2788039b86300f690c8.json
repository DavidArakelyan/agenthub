{"ast":null,"code":"var _jsxFileName = \"/Users/davida/workspace/agenthub/services/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [currentChatId, setCurrentChatId] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [attachedFiles, setAttachedFiles] = useState([]);\n  const [canvas, setCanvas] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const messagesEndRef = useRef(null);\n  const fileInputRef = useRef(null);\n\n  // Load chats from localStorage on initial render\n  useEffect(() => {\n    const savedChats = localStorage.getItem('chats');\n    if (savedChats) {\n      const parsedChats = JSON.parse(savedChats).map(chat => ({\n        ...chat,\n        createdAt: new Date(chat.createdAt),\n        updatedAt: new Date(chat.updatedAt)\n      }));\n      setChats(parsedChats);\n      if (parsedChats.length > 0) {\n        setCurrentChatId(parsedChats[0].id);\n        setMessages(parsedChats[0].messages);\n      }\n    }\n  }, []);\n\n  // Save chats to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem('chats', JSON.stringify(chats));\n  }, [chats]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const generateChatName = firstMessage => {\n    // Truncate the first message to create a chat name\n    const maxLength = 30;\n    const truncatedMessage = firstMessage.length > maxLength ? firstMessage.substring(0, maxLength) + '...' : firstMessage;\n    return truncatedMessage;\n  };\n  const createNewChat = () => {\n    const newChat = {\n      id: Math.random().toString(36).substr(2, 9),\n      name: 'New Chat',\n      messages: [],\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    setChats(prev => [newChat, ...prev]);\n    setCurrentChatId(newChat.id);\n    setMessages([]);\n    setCanvas([]);\n    setAttachedFiles([]);\n  };\n  const switchChat = chatId => {\n    const chat = chats.find(c => c.id === chatId);\n    if (chat) {\n      setCurrentChatId(chatId);\n      setMessages(chat.messages);\n      setCanvas([]); // Reset canvas when switching chats\n      setAttachedFiles([]);\n    }\n  };\n  const handleSend = async () => {\n    if (input.trim() || attachedFiles.length > 0) {\n      const newMessage = {\n        text: input,\n        type: 'user',\n        files: attachedFiles.map(f => f.file)\n      };\n\n      // Update messages state\n      const updatedMessages = [...messages, newMessage];\n      setMessages(updatedMessages);\n\n      // Update chat name if this is the first message\n      if (updatedMessages.length === 1) {\n        const chatName = generateChatName(input);\n        setChats(prev => prev.map(chat => chat.id === currentChatId ? {\n          ...chat,\n          name: chatName,\n          messages: updatedMessages,\n          updatedAt: new Date()\n        } : chat));\n      } else {\n        // Update existing chat\n        setChats(prev => prev.map(chat => chat.id === currentChatId ? {\n          ...chat,\n          messages: updatedMessages,\n          updatedAt: new Date()\n        } : chat));\n      }\n      setIsLoading(true);\n\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Simulate a response\n      const response = {\n        text: `Response to: ${input}${attachedFiles.length > 0 ? ' (with files)' : ''}`,\n        type: 'reply'\n      };\n      const finalMessages = [...updatedMessages, response];\n      setMessages(finalMessages);\n      setChats(prev => prev.map(chat => chat.id === currentChatId ? {\n        ...chat,\n        messages: finalMessages,\n        updatedAt: new Date()\n      } : chat));\n\n      // Only update canvas if there's generated content\n      const generatedContent = Math.random() > 0.5 ? `Generated content for: ${input}` : null;\n      if (generatedContent) {\n        setCanvas([...canvas, generatedContent]);\n      }\n      setInput('');\n      setAttachedFiles([]);\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSend();\n    }\n  };\n  const handleFileSelect = event => {\n    if (event.target.files) {\n      const newFiles = Array.from(event.target.files).map(file => ({\n        file,\n        id: Math.random().toString(36).substr(2, 9)\n      }));\n      setAttachedFiles(prev => [...prev, ...newFiles]);\n    }\n  };\n  const removeFile = id => {\n    setAttachedFiles(prev => prev.filter(f => f.id !== id));\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    setIsDragging(false);\n    if (e.dataTransfer.files) {\n      const newFiles = Array.from(e.dataTransfer.files).map(file => ({\n        file,\n        id: Math.random().toString(36).substr(2, 9)\n      }));\n      setAttachedFiles(prev => [...prev, ...newFiles]);\n    }\n  };\n  const clearChat = () => {\n    setMessages([]);\n    setCanvas([]);\n    setAttachedFiles([]);\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const deleteChat = (chatId, event) => {\n    event.stopPropagation();\n    setChats(prev => prev.filter(chat => chat.id !== chatId));\n    if (currentChatId === chatId) {\n      if (chats.length > 1) {\n        const remainingChats = chats.filter(chat => chat.id !== chatId);\n        switchChat(remainingChats[0].id);\n      } else {\n        createNewChat();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-chat-button\",\n          onClick: createNewChat,\n          children: \"+ New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-history\",\n          children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-item ${currentChatId === chat.id ? 'active' : ''}`,\n            onClick: () => switchChat(chat.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-item-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"chat-name\",\n                children: chat.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"chat-date\",\n                children: new Date(chat.updatedAt).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-chat\",\n              onClick: e => deleteChat(chat.id, e),\n              title: \"Delete chat\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 33\n            }, this)]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: !currentChatId ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-screen\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Welcome to AgentHub\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Click \\\"New Chat\\\" to start a conversation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"messages-container\",\n            children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"welcome-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"AgentHub Chat\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Start a conversation with the AI assistant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 37\n            }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message-wrapper ${msg.type}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-header\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"message-label\",\n                    children: msg.type === 'user' ? 'You' : 'Assistant'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-text\",\n                  children: msg.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 49\n                }, this), msg.files && msg.files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-files\",\n                  children: msg.files.map((file, fileIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"file-preview\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"file-name\",\n                      children: file.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"file-size\",\n                      children: formatFileSize(file.size)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 290,\n                      columnNumber: 65\n                    }, this)]\n                  }, fileIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 61\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 45\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 41\n            }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-wrapper reply\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-header\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"message-label\",\n                    children: \"Assistant\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"typing-indicator\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: messagesEndRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-area\",\n            children: [attachedFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"attached-files\",\n              children: attachedFiles.map(({\n                file,\n                id\n              }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"file-tag\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-name\",\n                  children: file.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-size\",\n                  children: formatFileSize(file.size)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"remove-file\",\n                  onClick: () => removeFile(id),\n                  title: \"Remove file\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 49\n                }, this)]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `input-container ${isDragging ? 'dragging' : ''}`,\n              onDragOver: handleDragOver,\n              onDragLeave: handleDragLeave,\n              onDrop: handleDrop,\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: input,\n                onChange: e => setInput(e.target.value),\n                onKeyPress: handleKeyPress,\n                placeholder: \"Message AgentHub...\",\n                rows: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"attach-button\",\n                  onClick: () => {\n                    var _fileInputRef$current;\n                    return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n                  },\n                  title: \"Attach files\",\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 353,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"polyline\", {\n                      points: \"17 8 12 3 7 8\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 354,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n                      x1: \"12\",\n                      y1: \"3\",\n                      x2: \"12\",\n                      y2: \"15\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 355,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"send-button\",\n                  onClick: handleSend,\n                  disabled: !input.trim() && attachedFiles.length === 0 || isLoading,\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    viewBox: \"0 0 24 24\",\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M22 2L11 13M22 2L15 22L11 13L2 9L22 2Z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                ref: fileInputRef,\n                onChange: handleFileSelect,\n                multiple: true,\n                style: {\n                  display: 'none'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-footer\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"AgentHub can make mistakes. Consider checking important information.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 21\n        }, this), canvas.map((content, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"canvas-content\",\n          children: content\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"RI1VWx1AVM9/7TU18LfjcV0pAaI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","chats","setChats","currentChatId","setCurrentChatId","messages","setMessages","input","setInput","attachedFiles","setAttachedFiles","canvas","setCanvas","isLoading","setIsLoading","isDragging","setIsDragging","messagesEndRef","fileInputRef","savedChats","localStorage","getItem","parsedChats","JSON","parse","map","chat","createdAt","Date","updatedAt","length","id","setItem","stringify","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","generateChatName","firstMessage","maxLength","truncatedMessage","substring","createNewChat","newChat","Math","random","toString","substr","name","prev","switchChat","chatId","find","c","handleSend","trim","newMessage","text","type","files","f","file","updatedMessages","chatName","Promise","resolve","setTimeout","response","finalMessages","generatedContent","handleKeyPress","event","key","shiftKey","preventDefault","handleFileSelect","target","newFiles","Array","from","removeFile","filter","handleDragOver","e","handleDragLeave","handleDrop","dataTransfer","clearChat","formatFileSize","bytes","k","sizes","i","floor","log","parseFloat","pow","toFixed","deleteChat","stopPropagation","remainingChats","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","title","msg","index","fileIndex","size","ref","onDragOver","onDragLeave","onDrop","value","onChange","onKeyPress","placeholder","rows","_fileInputRef$current","click","viewBox","fill","stroke","strokeWidth","d","points","x1","y1","x2","y2","disabled","multiple","style","display","content","_c","$RefreshReg$"],"sources":["/Users/davida/workspace/agenthub/services/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, KeyboardEvent, useRef, useEffect } from 'react';\nimport './App.css';\n\ninterface Message {\n    text: string;\n    type: 'user' | 'reply';\n    files?: File[];\n}\n\ninterface AttachedFile {\n    file: File;\n    id: string;\n}\n\ninterface Chat {\n    id: string;\n    name: string;\n    messages: Message[];\n    createdAt: Date;\n    updatedAt: Date;\n}\n\nfunction App() {\n    const [chats, setChats] = useState<Chat[]>([]);\n    const [currentChatId, setCurrentChatId] = useState<string | null>(null);\n    const [messages, setMessages] = useState<Message[]>([]);\n    const [input, setInput] = useState('');\n    const [attachedFiles, setAttachedFiles] = useState<AttachedFile[]>([]);\n    const [canvas, setCanvas] = useState<string[]>([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [isDragging, setIsDragging] = useState(false);\n    const messagesEndRef = useRef<HTMLDivElement>(null);\n    const fileInputRef = useRef<HTMLInputElement>(null);\n\n    // Load chats from localStorage on initial render\n    useEffect(() => {\n        const savedChats = localStorage.getItem('chats');\n        if (savedChats) {\n            const parsedChats = JSON.parse(savedChats).map((chat: any) => ({\n                ...chat,\n                createdAt: new Date(chat.createdAt),\n                updatedAt: new Date(chat.updatedAt)\n            }));\n            setChats(parsedChats);\n            if (parsedChats.length > 0) {\n                setCurrentChatId(parsedChats[0].id);\n                setMessages(parsedChats[0].messages);\n            }\n        }\n    }, []);\n\n    // Save chats to localStorage whenever they change\n    useEffect(() => {\n        localStorage.setItem('chats', JSON.stringify(chats));\n    }, [chats]);\n\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    useEffect(() => {\n        scrollToBottom();\n    }, [messages]);\n\n    const generateChatName = (firstMessage: string) => {\n        // Truncate the first message to create a chat name\n        const maxLength = 30;\n        const truncatedMessage = firstMessage.length > maxLength\n            ? firstMessage.substring(0, maxLength) + '...'\n            : firstMessage;\n        return truncatedMessage;\n    };\n\n    const createNewChat = () => {\n        const newChat: Chat = {\n            id: Math.random().toString(36).substr(2, 9),\n            name: 'New Chat',\n            messages: [],\n            createdAt: new Date(),\n            updatedAt: new Date()\n        };\n        setChats(prev => [newChat, ...prev]);\n        setCurrentChatId(newChat.id);\n        setMessages([]);\n        setCanvas([]);\n        setAttachedFiles([]);\n    };\n\n    const switchChat = (chatId: string) => {\n        const chat = chats.find(c => c.id === chatId);\n        if (chat) {\n            setCurrentChatId(chatId);\n            setMessages(chat.messages);\n            setCanvas([]); // Reset canvas when switching chats\n            setAttachedFiles([]);\n        }\n    };\n\n    const handleSend = async () => {\n        if (input.trim() || attachedFiles.length > 0) {\n            const newMessage: Message = {\n                text: input,\n                type: 'user',\n                files: attachedFiles.map(f => f.file)\n            };\n\n            // Update messages state\n            const updatedMessages = [...messages, newMessage];\n            setMessages(updatedMessages);\n\n            // Update chat name if this is the first message\n            if (updatedMessages.length === 1) {\n                const chatName = generateChatName(input);\n                setChats(prev => prev.map(chat =>\n                    chat.id === currentChatId\n                        ? { ...chat, name: chatName, messages: updatedMessages, updatedAt: new Date() }\n                        : chat\n                ));\n            } else {\n                // Update existing chat\n                setChats(prev => prev.map(chat =>\n                    chat.id === currentChatId\n                        ? { ...chat, messages: updatedMessages, updatedAt: new Date() }\n                        : chat\n                ));\n            }\n\n            setIsLoading(true);\n\n            // Simulate API delay\n            await new Promise(resolve => setTimeout(resolve, 1000));\n\n            // Simulate a response\n            const response: Message = {\n                text: `Response to: ${input}${attachedFiles.length > 0 ? ' (with files)' : ''}`,\n                type: 'reply'\n            };\n\n            const finalMessages = [...updatedMessages, response];\n            setMessages(finalMessages);\n            setChats(prev => prev.map(chat =>\n                chat.id === currentChatId\n                    ? { ...chat, messages: finalMessages, updatedAt: new Date() }\n                    : chat\n            ));\n\n            // Only update canvas if there's generated content\n            const generatedContent = Math.random() > 0.5 ? `Generated content for: ${input}` : null;\n            if (generatedContent) {\n                setCanvas([...canvas, generatedContent]);\n            }\n\n            setInput('');\n            setAttachedFiles([]);\n            setIsLoading(false);\n        }\n    };\n\n    const handleKeyPress = (event: KeyboardEvent<HTMLTextAreaElement>) => {\n        if (event.key === 'Enter' && !event.shiftKey) {\n            event.preventDefault();\n            handleSend();\n        }\n    };\n\n    const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.target.files) {\n            const newFiles = Array.from(event.target.files).map(file => ({\n                file,\n                id: Math.random().toString(36).substr(2, 9)\n            }));\n            setAttachedFiles(prev => [...prev, ...newFiles]);\n        }\n    };\n\n    const removeFile = (id: string) => {\n        setAttachedFiles(prev => prev.filter(f => f.id !== id));\n    };\n\n    const handleDragOver = (e: React.DragEvent) => {\n        e.preventDefault();\n        setIsDragging(true);\n    };\n\n    const handleDragLeave = (e: React.DragEvent) => {\n        e.preventDefault();\n        setIsDragging(false);\n    };\n\n    const handleDrop = (e: React.DragEvent) => {\n        e.preventDefault();\n        setIsDragging(false);\n\n        if (e.dataTransfer.files) {\n            const newFiles = Array.from(e.dataTransfer.files).map(file => ({\n                file,\n                id: Math.random().toString(36).substr(2, 9)\n            }));\n            setAttachedFiles(prev => [...prev, ...newFiles]);\n        }\n    };\n\n    const clearChat = () => {\n        setMessages([]);\n        setCanvas([]);\n        setAttachedFiles([]);\n    };\n\n    const formatFileSize = (bytes: number) => {\n        if (bytes === 0) return '0 Bytes';\n        const k = 1024;\n        const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    };\n\n    const deleteChat = (chatId: string, event: React.MouseEvent) => {\n        event.stopPropagation();\n        setChats(prev => prev.filter(chat => chat.id !== chatId));\n        if (currentChatId === chatId) {\n            if (chats.length > 1) {\n                const remainingChats = chats.filter(chat => chat.id !== chatId);\n                switchChat(remainingChats[0].id);\n            } else {\n                createNewChat();\n            }\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <div className=\"chat-layout\">\n                <div className=\"sidebar\">\n                    <button className=\"new-chat-button\" onClick={createNewChat}>\n                        + New Chat\n                    </button>\n                    <div className=\"chat-history\">\n                        {chats.map(chat => (\n                            <div\n                                key={chat.id}\n                                className={`chat-item ${currentChatId === chat.id ? 'active' : ''}`}\n                                onClick={() => switchChat(chat.id)}\n                            >\n                                <div className=\"chat-item-content\">\n                                    <span className=\"chat-name\">{chat.name}</span>\n                                    <span className=\"chat-date\">\n                                        {new Date(chat.updatedAt).toLocaleDateString()}\n                                    </span>\n                                </div>\n                                <button\n                                    className=\"delete-chat\"\n                                    onClick={(e) => deleteChat(chat.id, e)}\n                                    title=\"Delete chat\"\n                                >\n                                    ×\n                                </button>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n                <div className=\"main-content\">\n                    {!currentChatId ? (\n                        <div className=\"welcome-screen\">\n                            <h1>Welcome to AgentHub</h1>\n                            <p>Click \"New Chat\" to start a conversation</p>\n                        </div>\n                    ) : (\n                        <>\n                            <div className=\"messages-container\">\n                                {messages.length === 0 ? (\n                                    <div className=\"welcome-message\">\n                                        <h1>AgentHub Chat</h1>\n                                        <p>Start a conversation with the AI assistant</p>\n                                    </div>\n                                ) : (\n                                    messages.map((msg, index) => (\n                                        <div key={index} className={`message-wrapper ${msg.type}`}>\n                                            <div className=\"message-content\">\n                                                <div className=\"message-header\">\n                                                    <span className=\"message-label\">\n                                                        {msg.type === 'user' ? 'You' : 'Assistant'}\n                                                    </span>\n                                                </div>\n                                                <div className=\"message-text\">{msg.text}</div>\n                                                {msg.files && msg.files.length > 0 && (\n                                                    <div className=\"message-files\">\n                                                        {msg.files.map((file, fileIndex) => (\n                                                            <div key={fileIndex} className=\"file-preview\">\n                                                                <span className=\"file-name\">{file.name}</span>\n                                                                <span className=\"file-size\">{formatFileSize(file.size)}</span>\n                                                            </div>\n                                                        ))}\n                                                    </div>\n                                                )}\n                                            </div>\n                                        </div>\n                                    ))\n                                )}\n                                {isLoading && (\n                                    <div className=\"message-wrapper reply\">\n                                        <div className=\"message-content\">\n                                            <div className=\"message-header\">\n                                                <span className=\"message-label\">Assistant</span>\n                                            </div>\n                                            <div className=\"typing-indicator\">\n                                                <span></span>\n                                                <span></span>\n                                                <span></span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                )}\n                                <div ref={messagesEndRef} />\n                            </div>\n                            <div className=\"input-area\">\n                                {attachedFiles.length > 0 && (\n                                    <div className=\"attached-files\">\n                                        {attachedFiles.map(({ file, id }) => (\n                                            <div key={id} className=\"file-tag\">\n                                                <span className=\"file-name\">{file.name}</span>\n                                                <span className=\"file-size\">{formatFileSize(file.size)}</span>\n                                                <button\n                                                    className=\"remove-file\"\n                                                    onClick={() => removeFile(id)}\n                                                    title=\"Remove file\"\n                                                >\n                                                    ×\n                                                </button>\n                                            </div>\n                                        ))}\n                                    </div>\n                                )}\n                                <div\n                                    className={`input-container ${isDragging ? 'dragging' : ''}`}\n                                    onDragOver={handleDragOver}\n                                    onDragLeave={handleDragLeave}\n                                    onDrop={handleDrop}\n                                >\n                                    <textarea\n                                        value={input}\n                                        onChange={(e) => setInput(e.target.value)}\n                                        onKeyPress={handleKeyPress}\n                                        placeholder=\"Message AgentHub...\"\n                                        rows={1}\n                                    />\n                                    <div className=\"input-actions\">\n                                        <button\n                                            className=\"attach-button\"\n                                            onClick={() => fileInputRef.current?.click()}\n                                            title=\"Attach files\"\n                                        >\n                                            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                                                <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\" />\n                                                <polyline points=\"17 8 12 3 7 8\" />\n                                                <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\" />\n                                            </svg>\n                                        </button>\n                                        <button\n                                            className=\"send-button\"\n                                            onClick={handleSend}\n                                            disabled={(!input.trim() && attachedFiles.length === 0) || isLoading}\n                                        >\n                                            <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                                                <path d=\"M22 2L11 13M22 2L15 22L11 13L2 9L22 2Z\" />\n                                            </svg>\n                                        </button>\n                                    </div>\n                                    <input\n                                        type=\"file\"\n                                        ref={fileInputRef}\n                                        onChange={handleFileSelect}\n                                        multiple\n                                        style={{ display: 'none' }}\n                                    />\n                                </div>\n                                <div className=\"input-footer\">\n                                    <span>AgentHub can make mistakes. Consider checking important information.</span>\n                                </div>\n                            </div>\n                        </>\n                    )}\n                </div>\n                <div className=\"canvas-panel\">\n                    <h2>Canvas</h2>\n                    {canvas.map((content, index) => (\n                        <div key={index} className=\"canvas-content\">{content}</div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}