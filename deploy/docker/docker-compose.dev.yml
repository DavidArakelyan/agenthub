services:
  orchestrator:
    build:
      context: ../../services/orchestrator
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    env_file:
      - ../../.env
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ENVIRONMENT=development
    volumes:
      - ../../services/orchestrator:/app
    depends_on:
      - redis
      - rabbitmq
    profiles:
      - all
      - api
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    profiles:
      - all
      - api
      - support

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    profiles:
      - all
      - api
      - support

  milvus:
    image: milvusdb/milvus:v2.3.1
    ports:
      - "19530:19530"
      - "9091:9091"
    volumes:
      - milvus_data:/var/lib/milvus
    environment:
      - ETCD_CFG.auto-compaction-mode=revision
      - ETCD_CFG.auto-compaction-retention=1000
      - COMMON_CFG.retention_duration=100
    profiles:
      - all
      - support
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ../../deploy/prometheus:/etc/prometheus
      - prometheus-storage:/prometheus
    profiles:
      - all
      - support

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    profiles:
      - all
      - support

  documents:
    build:
      context: ../../services/documents
      dockerfile: Dockerfile.dev
    ports:
      - "8001:8001"
    volumes:
      - ../../services/documents:/app
    env_file:
      - ../../.env
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ENVIRONMENT=development
    depends_on:
      - redis
      - rabbitmq
      - milvus
    profiles:
      - all
      - api

  websearch:
    build:
      context: ../../services/websearch
      dockerfile: Dockerfile.dev
    ports:
      - "8002:8002"
    volumes:
      - ../../services/websearch:/app
    profiles:
      - all
      - api

  frontend:
    build:
      context: ../../services/frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ../../services/frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000/ws
      - REACT_APP_DOCUMENT_SERVICE_URL=http://localhost:8001
      - REACT_APP_WEBSEARCH_SERVICE_URL=http://localhost:8002
      - REACT_APP_MAX_FILE_SIZE=10485760
    profiles:
      - all
      - web

volumes:
  redis_data:
  rabbitmq_data:
  milvus_data:
  prometheus-storage:
  grafana-storage:
